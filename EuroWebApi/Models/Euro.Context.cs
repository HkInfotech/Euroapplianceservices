//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EuroWebApi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EURODbContext : DbContext
    {
        public EURODbContext()
            : base("name=EURODbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AppliancesImages> AppliancesImages { get; set; }
        public virtual DbSet<ApplianceTypes> ApplianceTypes { get; set; }
        public virtual DbSet<BillingAddress> BillingAddress { get; set; }
        public virtual DbSet<Company> Company { get; set; }
        public virtual DbSet<CompanyServiceCharges> CompanyServiceCharges { get; set; }
        public virtual DbSet<CustomerAppliances> CustomerAppliances { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<JobNature> JobNature { get; set; }
        public virtual DbSet<JobStatus> JobStatus { get; set; }
        public virtual DbSet<Manufacturers> Manufacturers { get; set; }
        public virtual DbSet<PaymentModes> PaymentModes { get; set; }
        public virtual DbSet<Provinces> Provinces { get; set; }
        public virtual DbSet<ServiceItems> ServiceItems { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<UserTypes> UserTypes { get; set; }
        public virtual DbSet<WorkOrder_Header> WorkOrder_Header { get; set; }
        public virtual DbSet<Workorder_Images> Workorder_Images { get; set; }
        public virtual DbSet<WorkOrder_Notes> WorkOrder_Notes { get; set; }
        public virtual DbSet<WorkOrder_Parts> WorkOrder_Parts { get; set; }
        public virtual DbSet<WorkOrder_Payments> WorkOrder_Payments { get; set; }
        public virtual DbSet<WorkOrder_Schedule> WorkOrder_Schedule { get; set; }
        public virtual DbSet<WorkOrder_ServiceItems> WorkOrder_ServiceItems { get; set; }
        public virtual DbSet<WorkOrder_ServiceLocation> WorkOrder_ServiceLocation { get; set; }
        public virtual DbSet<WorkOrder_Services> WorkOrder_Services { get; set; }
        public virtual DbSet<vw_CustomerAppliances> vw_CustomerAppliances { get; set; }
        public virtual DbSet<vw_Customers> vw_Customers { get; set; }
        public virtual DbSet<vw_ServiceLocations> vw_ServiceLocations { get; set; }
    
        [DbFunction("EURODbContext", "Split")]
        public virtual IQueryable<Split_Result> Split(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[EURODbContext].[Split](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual ObjectResult<SP_Company_Pricelist_Result> SP_Company_Pricelist(Nullable<long> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Company_Pricelist_Result>("SP_Company_Pricelist", companyIdParameter);
        }
    
        public virtual int SP_CompanyWiseSalesDetail(Nullable<long> companyId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CompanyWiseSalesDetail", companyIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_CompanyWiseSalesSummary_Result> SP_CompanyWiseSalesSummary(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CompanyWiseSalesSummary_Result>("SP_CompanyWiseSalesSummary", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> SP_CustomerAdd(Nullable<int> companyId, string referenceBy, string firstName, string lastName, string addressLine1, string addressLine2, string city, Nullable<int> provinceId, string postalCode, string phoneNumber, string cellPhone, string email)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var referenceByParameter = referenceBy != null ?
                new ObjectParameter("ReferenceBy", referenceBy) :
                new ObjectParameter("ReferenceBy", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("AddressLine2", addressLine2) :
                new ObjectParameter("AddressLine2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var cellPhoneParameter = cellPhone != null ?
                new ObjectParameter("CellPhone", cellPhone) :
                new ObjectParameter("CellPhone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CustomerAdd", companyIdParameter, referenceByParameter, firstNameParameter, lastNameParameter, addressLine1Parameter, addressLine2Parameter, cityParameter, provinceIdParameter, postalCodeParameter, phoneNumberParameter, cellPhoneParameter, emailParameter);
        }
    
        public virtual int SP_CustomerAddAppliances(Nullable<long> customerId, Nullable<long> applianceTypeId, Nullable<long> manufaturerId, string modelNumber, string serialNumber, Nullable<System.DateTime> purchaseDate, string notes)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var applianceTypeIdParameter = applianceTypeId.HasValue ?
                new ObjectParameter("ApplianceTypeId", applianceTypeId) :
                new ObjectParameter("ApplianceTypeId", typeof(long));
    
            var manufaturerIdParameter = manufaturerId.HasValue ?
                new ObjectParameter("ManufaturerId", manufaturerId) :
                new ObjectParameter("ManufaturerId", typeof(long));
    
            var modelNumberParameter = modelNumber != null ?
                new ObjectParameter("ModelNumber", modelNumber) :
                new ObjectParameter("ModelNumber", typeof(string));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var purchaseDateParameter = purchaseDate.HasValue ?
                new ObjectParameter("PurchaseDate", purchaseDate) :
                new ObjectParameter("PurchaseDate", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CustomerAddAppliances", customerIdParameter, applianceTypeIdParameter, manufaturerIdParameter, modelNumberParameter, serialNumberParameter, purchaseDateParameter, notesParameter);
        }
    
        public virtual ObjectResult<SP_CustomerCommon_Result> SP_CustomerCommon(Nullable<bool> flag)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CustomerCommon_Result>("SP_CustomerCommon", flagParameter);
        }
    
        public virtual ObjectResult<sp_CustomersSearch_Result> sp_CustomersSearch(string firstName, string lastName, string phone, string address)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CustomersSearch_Result>("sp_CustomersSearch", firstNameParameter, lastNameParameter, phoneParameter, addressParameter);
        }
    
        public virtual ObjectResult<SP_getCompanyDetails_Result> SP_getCompanyDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getCompanyDetails_Result>("SP_getCompanyDetails");
        }
    
        public virtual int SP_getCompanyFinancial(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_getCompanyFinancial", startDateParameter, endDateParameter);
        }
    
        public virtual int SP_getCompanyFinancial_SingleCompany(Nullable<long> companyId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_getCompanyFinancial_SingleCompany", companyIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetJobStatus_Result> SP_GetJobStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetJobStatus_Result>("SP_GetJobStatus");
        }
    
        public virtual ObjectResult<SP_getMonthWiseOrders_Result> SP_getMonthWiseOrders(Nullable<int> currentYear)
        {
            var currentYearParameter = currentYear.HasValue ?
                new ObjectParameter("CurrentYear", currentYear) :
                new ObjectParameter("CurrentYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getMonthWiseOrders_Result>("SP_getMonthWiseOrders", currentYearParameter);
        }
    
        public virtual ObjectResult<SP_getWorkOrder_Payments_Result> SP_getWorkOrder_Payments(Nullable<long> workOrderId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getWorkOrder_Payments_Result>("SP_getWorkOrder_Payments", workOrderIdParameter);
        }
    
        public virtual ObjectResult<sp_getWorkOrder_Services_Result> sp_getWorkOrder_Services(Nullable<long> workOrderId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getWorkOrder_Services_Result>("sp_getWorkOrder_Services", workOrderIdParameter);
        }
    
        public virtual ObjectResult<SP_getWorkOrderLedger_Result> SP_getWorkOrderLedger()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getWorkOrderLedger_Result>("SP_getWorkOrderLedger");
        }
    
        public virtual ObjectResult<SP_getWorkOrderLedger_test_Result> SP_getWorkOrderLedger_test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getWorkOrderLedger_test_Result>("SP_getWorkOrderLedger_test");
        }
    
        public virtual ObjectResult<SP_getWorkOrderPayments_Result> SP_getWorkOrderPayments(Nullable<long> workOrderId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_getWorkOrderPayments_Result>("SP_getWorkOrderPayments", workOrderIdParameter);
        }
    
        public virtual int SP_graph_CompanyWiseSale(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_graph_CompanyWiseSale", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_Invoice_Print_Detail_Result> SP_Invoice_Print_Detail(Nullable<long> workOrderId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Invoice_Print_Detail_Result>("SP_Invoice_Print_Detail", workOrderIdParameter);
        }
    
        public virtual ObjectResult<SP_Invoice_Print_Header_Result> SP_Invoice_Print_Header(Nullable<long> wOrkOrderId)
        {
            var wOrkOrderIdParameter = wOrkOrderId.HasValue ?
                new ObjectParameter("WOrkOrderId", wOrkOrderId) :
                new ObjectParameter("WOrkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Invoice_Print_Header_Result>("SP_Invoice_Print_Header", wOrkOrderIdParameter);
        }
    
        public virtual ObjectResult<SP_Invoice_Print_Header_backup_Result> SP_Invoice_Print_Header_backup(Nullable<long> wOrkOrderId)
        {
            var wOrkOrderIdParameter = wOrkOrderId.HasValue ?
                new ObjectParameter("WOrkOrderId", wOrkOrderId) :
                new ObjectParameter("WOrkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Invoice_Print_Header_backup_Result>("SP_Invoice_Print_Header_backup", wOrkOrderIdParameter);
        }
    
        public virtual ObjectResult<SP_Invoice_Print_Header_test_Result> SP_Invoice_Print_Header_test(Nullable<long> wOrkOrderId)
        {
            var wOrkOrderIdParameter = wOrkOrderId.HasValue ?
                new ObjectParameter("WOrkOrderId", wOrkOrderId) :
                new ObjectParameter("WOrkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Invoice_Print_Header_test_Result>("SP_Invoice_Print_Header_test", wOrkOrderIdParameter);
        }
    
        public virtual ObjectResult<SP_Invoice_Print_InvoiceTotals_Result> SP_Invoice_Print_InvoiceTotals(Nullable<long> workOrderId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Invoice_Print_InvoiceTotals_Result>("SP_Invoice_Print_InvoiceTotals", workOrderIdParameter);
        }
    
        public virtual int SP_Invoice_Print_LineItems(Nullable<long> wOrkORderId)
        {
            var wOrkORderIdParameter = wOrkORderId.HasValue ?
                new ObjectParameter("WOrkORderId", wOrkORderId) :
                new ObjectParameter("WOrkORderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Invoice_Print_LineItems", wOrkORderIdParameter);
        }
    
        public virtual ObjectResult<SP_Invoice_Print_Totals_Result> SP_Invoice_Print_Totals(Nullable<long> workOrderId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Invoice_Print_Totals_Result>("SP_Invoice_Print_Totals", workOrderIdParameter);
        }
    
        public virtual ObjectResult<sp_ScheduleListing_Result> sp_ScheduleListing(Nullable<System.DateTime> serviceDate)
        {
            var serviceDateParameter = serviceDate.HasValue ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ScheduleListing_Result>("sp_ScheduleListing", serviceDateParameter);
        }
    
        public virtual ObjectResult<SP_TechnicianWiseOrders_Result> SP_TechnicianWiseOrders(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TechnicianWiseOrders_Result>("SP_TechnicianWiseOrders", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<sp_webapi_add_update_workorderparts_Result> sp_webapi_add_update_workorderparts(Nullable<long> workOrderId, Nullable<long> userId, string partName, Nullable<decimal> quantity, Nullable<decimal> rate, Nullable<decimal> totalAmount, string note, Nullable<long> workOrderPartId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var workOrderPartIdParameter = workOrderPartId.HasValue ?
                new ObjectParameter("WorkOrderPartId", workOrderPartId) :
                new ObjectParameter("WorkOrderPartId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_add_update_workorderparts_Result>("sp_webapi_add_update_workorderparts", workOrderIdParameter, userIdParameter, partNameParameter, quantityParameter, rateParameter, totalAmountParameter, noteParameter, workOrderPartIdParameter);
        }
    
        public virtual ObjectResult<sp_webapi_CheckLogin_Result> sp_webapi_CheckLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_CheckLogin_Result>("sp_webapi_CheckLogin", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_webapi_Delete_WorkOrderImages_Result> sp_webapi_Delete_WorkOrderImages(Nullable<int> workOrderId, Nullable<int> workOrderImageId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(int));
    
            var workOrderImageIdParameter = workOrderImageId.HasValue ?
                new ObjectParameter("WorkOrderImageId", workOrderImageId) :
                new ObjectParameter("WorkOrderImageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_Delete_WorkOrderImages_Result>("sp_webapi_Delete_WorkOrderImages", workOrderIdParameter, workOrderImageIdParameter);
        }
    
        public virtual ObjectResult<sp_webapi_delete_workorderparts_Result> sp_webapi_delete_workorderparts(Nullable<int> workOrderPartId, Nullable<int> workOrderId, Nullable<int> userId)
        {
            var workOrderPartIdParameter = workOrderPartId.HasValue ?
                new ObjectParameter("WorkOrderPartId", workOrderPartId) :
                new ObjectParameter("WorkOrderPartId", typeof(int));
    
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_delete_workorderparts_Result>("sp_webapi_delete_workorderparts", workOrderPartIdParameter, workOrderIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<sp_webapi_GetJobNature_Result> sp_webapi_GetJobNature()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_GetJobNature_Result>("sp_webapi_GetJobNature");
        }
    
        public virtual ObjectResult<sp_webapi_getJobNatureList_Result> sp_webapi_getJobNatureList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_getJobNatureList_Result>("sp_webapi_getJobNatureList");
        }
    
        public virtual ObjectResult<sp_webapi_getJobStatusList_Result> sp_webapi_getJobStatusList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_getJobStatusList_Result>("sp_webapi_getJobStatusList");
        }
    
        public virtual ObjectResult<SP_webapi_GetOrderDetailsByWorkOrderId_Result> SP_webapi_GetOrderDetailsByWorkOrderId(Nullable<long> workOrderId, Nullable<long> userId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("workOrderId", workOrderId) :
                new ObjectParameter("workOrderId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_webapi_GetOrderDetailsByWorkOrderId_Result>("SP_webapi_GetOrderDetailsByWorkOrderId", workOrderIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<sp_webapi_GetOrdersByTechnicianID_Result> sp_webapi_GetOrdersByTechnicianID(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_GetOrdersByTechnicianID_Result>("sp_webapi_GetOrdersByTechnicianID", userIdParameter);
        }
    
        public virtual ObjectResult<sp_webapi_GetOrdersByUserID_Result> sp_webapi_GetOrdersByUserID(Nullable<long> userId, Nullable<long> workOrderId, string customerFirstName, string customerLastName, string phoneNo, string customerAddress)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            var customerFirstNameParameter = customerFirstName != null ?
                new ObjectParameter("CustomerFirstName", customerFirstName) :
                new ObjectParameter("CustomerFirstName", typeof(string));
    
            var customerLastNameParameter = customerLastName != null ?
                new ObjectParameter("CustomerLastName", customerLastName) :
                new ObjectParameter("CustomerLastName", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var customerAddressParameter = customerAddress != null ?
                new ObjectParameter("CustomerAddress", customerAddress) :
                new ObjectParameter("CustomerAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_GetOrdersByUserID_Result>("sp_webapi_GetOrdersByUserID", userIdParameter, workOrderIdParameter, customerFirstNameParameter, customerLastNameParameter, phoneNoParameter, customerAddressParameter);
        }
    
        public virtual ObjectResult<sp_webapi_getTechniciansList_Result> sp_webapi_getTechniciansList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_getTechniciansList_Result>("sp_webapi_getTechniciansList");
        }
    
        public virtual ObjectResult<sp_webapi_update_appliance_Result> sp_webapi_update_appliance(Nullable<int> workorderId, Nullable<int> customerApplianceId, Nullable<int> applianceTypeId, Nullable<int> manufacturerId, string serialNumber, string modelNumber, string imageNum1, string imageNum2, string imageNum3, string imageNum4)
        {
            var workorderIdParameter = workorderId.HasValue ?
                new ObjectParameter("WorkorderId", workorderId) :
                new ObjectParameter("WorkorderId", typeof(int));
    
            var customerApplianceIdParameter = customerApplianceId.HasValue ?
                new ObjectParameter("CustomerApplianceId", customerApplianceId) :
                new ObjectParameter("CustomerApplianceId", typeof(int));
    
            var applianceTypeIdParameter = applianceTypeId.HasValue ?
                new ObjectParameter("ApplianceTypeId", applianceTypeId) :
                new ObjectParameter("ApplianceTypeId", typeof(int));
    
            var manufacturerIdParameter = manufacturerId.HasValue ?
                new ObjectParameter("ManufacturerId", manufacturerId) :
                new ObjectParameter("ManufacturerId", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var modelNumberParameter = modelNumber != null ?
                new ObjectParameter("ModelNumber", modelNumber) :
                new ObjectParameter("ModelNumber", typeof(string));
    
            var imageNum1Parameter = imageNum1 != null ?
                new ObjectParameter("ImageNum1", imageNum1) :
                new ObjectParameter("ImageNum1", typeof(string));
    
            var imageNum2Parameter = imageNum2 != null ?
                new ObjectParameter("ImageNum2", imageNum2) :
                new ObjectParameter("ImageNum2", typeof(string));
    
            var imageNum3Parameter = imageNum3 != null ?
                new ObjectParameter("ImageNum3", imageNum3) :
                new ObjectParameter("ImageNum3", typeof(string));
    
            var imageNum4Parameter = imageNum4 != null ?
                new ObjectParameter("ImageNum4", imageNum4) :
                new ObjectParameter("ImageNum4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_update_appliance_Result>("sp_webapi_update_appliance", workorderIdParameter, customerApplianceIdParameter, applianceTypeIdParameter, manufacturerIdParameter, serialNumberParameter, modelNumberParameter, imageNum1Parameter, imageNum2Parameter, imageNum3Parameter, imageNum4Parameter);
        }
    
        public virtual ObjectResult<sp_webapi_UpdateOrderDetailsByWorkOrderId_Result> sp_webapi_UpdateOrderDetailsByWorkOrderId(Nullable<int> workOrderId, Nullable<int> userId, string serviceDate, string serviceTime, Nullable<int> jobNatureID, Nullable<int> jobStatusID, string ticketNumber, string codwar, Nullable<decimal> mileage, string note, string customerName)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var serviceDateParameter = serviceDate != null ?
                new ObjectParameter("ServiceDate", serviceDate) :
                new ObjectParameter("ServiceDate", typeof(string));
    
            var serviceTimeParameter = serviceTime != null ?
                new ObjectParameter("ServiceTime", serviceTime) :
                new ObjectParameter("ServiceTime", typeof(string));
    
            var jobNatureIDParameter = jobNatureID.HasValue ?
                new ObjectParameter("JobNatureID", jobNatureID) :
                new ObjectParameter("JobNatureID", typeof(int));
    
            var jobStatusIDParameter = jobStatusID.HasValue ?
                new ObjectParameter("JobStatusID", jobStatusID) :
                new ObjectParameter("JobStatusID", typeof(int));
    
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("TicketNumber", ticketNumber) :
                new ObjectParameter("TicketNumber", typeof(string));
    
            var codwarParameter = codwar != null ?
                new ObjectParameter("Codwar", codwar) :
                new ObjectParameter("Codwar", typeof(string));
    
            var mileageParameter = mileage.HasValue ?
                new ObjectParameter("Mileage", mileage) :
                new ObjectParameter("Mileage", typeof(decimal));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_UpdateOrderDetailsByWorkOrderId_Result>("sp_webapi_UpdateOrderDetailsByWorkOrderId", workOrderIdParameter, userIdParameter, serviceDateParameter, serviceTimeParameter, jobNatureIDParameter, jobStatusIDParameter, ticketNumberParameter, codwarParameter, mileageParameter, noteParameter, customerNameParameter);
        }
    
        public virtual ObjectResult<sp_webapi_Upload_WorkOrderImage_Result> sp_webapi_Upload_WorkOrderImage(Nullable<int> workOrderId, Nullable<int> userId, string customerName, string fileName, string notes)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_Upload_WorkOrderImage_Result>("sp_webapi_Upload_WorkOrderImage", workOrderIdParameter, userIdParameter, customerNameParameter, fileNameParameter, notesParameter);
        }
    
        public virtual ObjectResult<SP_WO_Notes_Listing_Result> SP_WO_Notes_Listing(Nullable<long> workOrderId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WO_Notes_Listing_Result>("SP_WO_Notes_Listing", workOrderIdParameter);
        }
    
        public virtual ObjectResult<SP_WorkOrderParts_Result> SP_WorkOrderParts(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WorkOrderParts_Result>("SP_WorkOrderParts", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<sp_webapi_GetApplianceTypes_Result> sp_webapi_GetApplianceTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_GetApplianceTypes_Result>("sp_webapi_GetApplianceTypes");
        }
    
        public virtual ObjectResult<sp_webapi_GetManufactures_Result> sp_webapi_GetManufactures()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_GetManufactures_Result>("sp_webapi_GetManufactures");
        }
    
        public virtual ObjectResult<sp_webapi_GetWorkOrderServices_Result> sp_webapi_GetWorkOrderServices(Nullable<long> workOrderId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_GetWorkOrderServices_Result>("sp_webapi_GetWorkOrderServices", workOrderIdParameter);
        }
    
        public virtual ObjectResult<SP_webapiGetWorkorderparts_Result> SP_webapiGetWorkorderparts(Nullable<long> workOrderid)
        {
            var workOrderidParameter = workOrderid.HasValue ?
                new ObjectParameter("WorkOrderid", workOrderid) :
                new ObjectParameter("WorkOrderid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_webapiGetWorkorderparts_Result>("SP_webapiGetWorkorderparts", workOrderidParameter);
        }
    
        public virtual ObjectResult<string> SP_webapi_getTechRemarks(Nullable<long> workOrderId)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("workOrderId", workOrderId) :
                new ObjectParameter("workOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_webapi_getTechRemarks", workOrderIdParameter);
        }
    
        public virtual ObjectResult<sp_webapi_UpdateWorkOrderServiceItems_Result> sp_webapi_UpdateWorkOrderServiceItems(Nullable<long> workOrderId, string serviceXML)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            var serviceXMLParameter = serviceXML != null ?
                new ObjectParameter("ServiceXML", serviceXML) :
                new ObjectParameter("ServiceXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_webapi_UpdateWorkOrderServiceItems_Result>("sp_webapi_UpdateWorkOrderServiceItems", workOrderIdParameter, serviceXMLParameter);
        }
    
        public virtual ObjectResult<SP_webapi_GetCustomerAppliances_Result> SP_webapi_GetCustomerAppliances(Nullable<long> wOrkOrderId)
        {
            var wOrkOrderIdParameter = wOrkOrderId.HasValue ?
                new ObjectParameter("WOrkOrderId", wOrkOrderId) :
                new ObjectParameter("WOrkOrderId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_webapi_GetCustomerAppliances_Result>("SP_webapi_GetCustomerAppliances", wOrkOrderIdParameter);
        }
    
        public virtual int sp_webapi_UpdateTechRemarks(Nullable<long> workOrderId, string techRemarks)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(long));
    
            var techRemarksParameter = techRemarks != null ?
                new ObjectParameter("TechRemarks", techRemarks) :
                new ObjectParameter("TechRemarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_webapi_UpdateTechRemarks", workOrderIdParameter, techRemarksParameter);
        }
    }
}
